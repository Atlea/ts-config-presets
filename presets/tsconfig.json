{
    /* Signal the IDE to generate all files upon saving. */
    "compileOnSave": false,

    "compilerOptions": {
        /* Allow JavaScript files to be compiled. */
        "allowJs": false,

        /* Report errors in .js files. */
        "checkJs": false,

        /* Generates corresponding .d.ts file. */
        "declaration": true,

        /* Import non-ES modules as default imports. */
        "esModuleInterop": true,

        /* Disallow inconsistently-cased references to the same file. */
        "forceConsistentCasingInFileNames": true,

        /* Import emit helpers (e.g. __extends, __rest, etc..) from tslib. */
        "importHelpers": true,

        /* Disallow features that require cross-file information for emit. */
        "isolatedModules": false,

        /* Support JSX in .tsx files */
        "jsx": "react",

        /* Resolve keyof to string valued property names only (no numbers or symbols). */
        "keyofStringsOnly": false,

        /* List of library files to be included *in the compilation*
         * TS assumes that language featues are available at runtime 
         * either via polyfills or by native support by the browser */
        "lib": ["dom", "esnext"],

        /* Specify module code generation. */
        "module": "esnext",

        /* Determine how modules get resolved. */
        "moduleResolution": "node",

        /* Use the specified end of line sequence to be used when emitting files. */
        "newLine": "crlf",

        /* Do not emit outputs. */
        "noEmit": false,

        /* Do not emit outputs if any errors were reported. */
        "noEmitOnError": true,

        /* Report errors for fallthrough cases in switch statement. */
        "noFallthroughCasesInSwitch": true,

        /* Raise error on expressions and declarations with an implied any type. */
        "noImplicitAny": true,

        /* Report an error when not all code paths in function return a value. */
        "noImplicitReturns": true,

        /* Concatenate and emit output to single file. Use when developing without bundler. */
        // "outFile": "bundle.js"

        /* Stylize errors and messages using color and context. */
        "pretty": true,
        
        /* Include modules imported with .json extension. */
        "resolveJsonModule": true,

        /* Enable all strict type checking options. */
        "strict": true,

        /* Specify ECMAScript target version. */
        "target": "es5",
    },

    /* A list of glob-like file patterns to be transpiled. */
    "include": [
        "src/**/*"
    ],

    /* A list of glob-like file patterns to be excluded from transpilation. */
    "exclude": [
        "node_modules",
        "**/*.spec.ts"
    ]
}
